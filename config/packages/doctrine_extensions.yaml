# services to handle doctrine extensions
# import it in config/packages/doctrine_extensions.yaml
services:
    # Attribute mapping driver for the Doctrine Extension listeners
    gedmo.mapping.driver.attribute:
        class: Gedmo\Mapping\Driver\AttributeReader

    # Doctrine Extension listeners to handle behaviors
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_listener, event: 'prePersist'}
            - { name: doctrine.event_listener, event: 'preUpdate'}
            - { name: doctrine.event_listener, event: 'preRemove'}
            - { name: doctrine.event_listener, event: 'onFlush'}
            - { name: doctrine.event_listener, event: 'loadClassMetadata'}
            - { name: doctrine.event_listener, event: 'postPersist'}
            - { name: doctrine.event_listener, event: 'postUpdate'}
            - { name: doctrine.event_listener, event: 'postRemove'}
        calls:
            # Uncomment the below call if using attributes, and comment the call for the annotation reader
            - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    # Gedmo\Translatable\TranslatableListener:
    #     tags:
    #         - { name: doctrine.event_listener, event: 'postLoad' }
    #         - { name: doctrine.event_listener, event: 'postPersist' }
    #         - { name: doctrine.event_listener, event: 'preFlush' }
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    #         - [ setDefaultLocale, [ "%locale%" ] ]
    #         - [ setTranslationFallback, [ false ] ]

    # gedmo.listener.timestampable:
    #     class: Gedmo\Timestampable\TimestampableListener
    #     tags:
    #         - { name: doctrine.event_listener, event: 'prePersist' }
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    # gedmo.listener.sluggable:
    #     class: Gedmo\Sluggable\SluggableListener
    #     tags:
    #         - { name: doctrine.event_listener, event: 'prePersist' }
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_listener, event: 'onFlush' }
            - { name: doctrine.event_listener, event: 'loadClassMetadata' }
            - { name: doctrine.event_listener, event: 'prePersist' }
            - { name: doctrine.event_listener, event: 'postPersist' }
            - { name: doctrine.event_listener, event: 'preUpdate' }
            - { name: doctrine.event_listener, event: 'postRemove' }
            - { name: doctrine.event_listener, event: 'postFlush' }
        calls:
            # Uncomment the below call if using attributes, and comment the call for the annotation reader
            - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    # gedmo.listener.softdeleteable:
    #     class: Gedmo\SoftDeleteable\SoftDeleteableListener
    #     tags:
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
            
    # Gedmo\Loggable\LoggableListener:
    #     tags:
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #         - { name: doctrine.event_listener, event: 'postPersist' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]

    # Gedmo\Blameable\BlameableListener:
    #     tags:
    #         - { name: doctrine.event_listener, event: 'prePersist' }
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
            
    # Gedmo\IpTraceable\IpTraceableListener:
    #     tags:
    #         - { name: doctrine.event_listener, event: 'prePersist' }
    #         - { name: doctrine.event_listener, event: 'onFlush' }
    #         - { name: doctrine.event_listener, event: 'loadClassMetadata' }
    #     calls:
    #         # Uncomment the below call if using attributes, and comment the call for the annotation reader
    #         - [ setAnnotationReader, [ "@gedmo.mapping.driver.attribute" ] ]
